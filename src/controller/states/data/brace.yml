Brace::Initialize:
  base: Initial
  frame: Femur
  stiffness: 10
  category: ["Initial Configuration"]

Brace::InitializeRobots:
  base: Parallel
  states: [Brace::Initialize, Choice]
  configs:
    Choice:
      category: []
      choices:
        - ["Calibrate", "Save Calibration"]
        - ["Skip Calibration", "SkipCalibration"]

Brace::InitializeRobots::Load:
  base: Brace::InitializeRobots
  configs:
    Brace::Initialize:
      load: true
      reset_mbc: false

Brace::InitializeRobots::NoLoad:
  base: Brace::InitializeRobots
  configs:
    Brace::Initialize:
      load: false

Brace::SaveCalibration:
  base: SaveCalibration
  robot: panda_brace_femur

Brace::PlayTrajectory:
  base: PlayTrajectory
  TrajectoryPlayer:
    FemurTrajectory:
      impedanceTask:
        dimWeight: [100, 100, 100, 1000, 1000, 1000]
        stiffness: [10, 10, 10, 500, 500, 500]
        gains:
          mass:
            angular: [10, 10, 10]
            linear: [10, 10, 10]
          damper:
            angular: [1000, 1000, 1000]
            linear: [1000, 1000, 1000]
          spring:
            angular: [1000, 1000, 1000]
            linear: [1000, 1000, 1000]
          wrench: # no force tracking for now
            angular: [0, 0, 0]
            linear: [0, 0, 0]

Brace::Simulation:
  base: Meta
  transitions:
    - [InitialChoice, LoadSavedCalibration, Brace::InitializeRobots::Load, Auto]
    - [InitialChoice, StartFromCurrent, Brace::InitializeRobots::NoLoad, Auto]
    - [Brace::InitializeRobots::Load, Calibrate, Brace::SaveCalibration, Auto]
    - [Brace::InitializeRobots::NoLoad, Calibrate, Brace::SaveCalibration, Auto]
    - [Brace::InitializeRobots::Load, SkipCalibration, ChooseTrajectory, Auto]
    - [Brace::InitializeRobots::NoLoad, SkipCalibration, ChooseTrajectory, Auto]
    - [Brace::SaveCalibration, OK, ChooseTrajectory, Auto]
    - [ChooseTrajectory, OK, Brace::PlayTrajectory , Auto]
  # - [PlayTrajectory, OK, InitialChoice , Auto]

