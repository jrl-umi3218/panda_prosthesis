---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: false
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: true
# Where to look for state libraries
StatesLibraries:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
# Where to look for state files
StatesFiles:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@/data"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data"
# If true, state factory will be more verbose
VerboseStateFactory: false

trajectory_dir: "@TRAJECTORY_DIR@"
results_dir: "@RESULTS_DIR@"
offsets:
  femur:
    translation: [0, 0, -0.01]
  tibia:
    translation: [0, 0, -0.02]
# Additional robots to load
robots:
  panda_femur:
    init_pos:
      translation: [0,0,0]
    frames:
      - name: FemurCalibration
        parent: support_femur
        X_p_f:
          translation: [0, 0, -0.215]
          rotation: [3.14, 0, 0.0]
      # Frame above the surface of the Femur
      # This should contain the desired offset distance between the femur and the joint center
      - name: Femur
        parent: support_femur
        X_p_f:
          translation: [0, 0, -0.19]
          rotation: [3.14, 0, 0]
  panda_tibia:
    module: PandaProsthesis::Tibia
    frames:
      - name: TibiaCalibration
        parent: panda_link8
        X_p_f:
          translation: [0, 0.096, 0.225] # assuming 2cm height for the calibration tool
          rotation: [1.57, 0, 0]
      # Frame above the surface of the Tibia
      # This should contain the desired offset distance between the tibia and the joint center
      - name: Tibia
        parent: panda_link8
        X_p_f:
          translation: [0, 0.046, 0.23]
          rotation: [1.57, 0, 0]
# General constraints, always on
constraints:
- type: contact
- type: kinematics
  robot: panda_femur
  damper: [0.1, 0.01, 0.5]
  velocityPercent: 0.9
- type: kinematics
  robot: panda_tibia
  damper: [0.1, 0.01, 0.5]
# Collision constraint
collisions:
- type: collision
  robot: panda_tibia
  useMinimal: true

ObserverPipelines:
  - name: PandaFemur
    observers:
    - type: BodySensor
      config:
        robot: panda_femur
        method: control
    - type: Encoder
      config:
        robot: panda_femur
        position: control
        velocity: control
  - name: PandaTibia
    observers:
    - type: BodySensor
      config:
        robot: panda_tibia
        method: control
    - type: Encoder
      config:
        robot: panda_tibia
        position: control
        velocity: control

# Initial set of contacts
contacts: []
# Implement some additional text states
states: {}

# Plugins: [BoneTagSerialPlugin]

transitions:
  - [ChooseMode, Simulation, Simulation, Auto]
  - [ChooseMode, Real, Real, Auto]

# Initial state
init: InitialChoice
# Store the location of configuration files
ETC_DIR: "@CMAKE_CURRENT_SOURCE_DIR@/etc"
